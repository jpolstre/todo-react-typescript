{"version":3,"sources":["store/ducks/tasks/types.ts","store/ducks/tasks/index.ts","store/ducks/rootReducer.ts","store/index.ts","components/Layout/styles.ts","components/Header/styles.ts","components/Header/index.tsx","store/ducks/tasks/actions.ts","components/TaskItem/styles.ts","components/Dialog/style.tsx","components/Dialog/index.ts","components/Dialog/Cmp.tsx","components/TaskItem/index.tsx","components/Notify/styles.ts","components/Notify/Notifyelem.tsx","components/Notify/index.ts","components/ListTasks/styles.ts","components/ListTasks/index.tsx","components/Footer/styles.ts","components/Footer/index.tsx","components/Layout/index.tsx","styles/GlobalStyles.ts","App.tsx","index.tsx"],"names":["ActionTypes","INITIAL_STATE","tasks","i","push","id","name","completed","initTasks","filter","notify","reducer","state","action","type","ADD_TASK","task","trim","some","toUpperCase","color","mesasge","concat","EDIT_TASK","index","findIndex","DELETE_TASK","TOGGLE_COMPLETED","indx","t","SET_FILTER","option","rootReducer","combineReducers","store","createStore","Grid","styled","div","Head","header","Header","title","setFilter","TaskLi","li","props","Button","button","IconDelete","DeleteForever","IconEdit","Edit","ETypeAction","EType","Container","Body","Footer","IconClose","HighlightOff","IconCancel","Cancel","IconOk","Check","Cmp","content","onOk","onCancel","useState","setId","containerRef","useRef","useEffect","container","current","parentElement","classList","add","body","querySelector","innerHTML","remove","console","log","element","document","getElementById","child","querySelectorAll","forEach","el","setTimeout","ref","onClick","className","CONFIRM","Dialog","this","draggable","Math","random","toString","show","component","React","createElement","style","cssText","root","backCover","appendChild","addEventListener","e","onMouseDown","ReactDOM","render","event","dragElement","isDragging","shiftX","shiftY","preventDefault","ondragstart","clientX","clientY","onMouseMove","onMouseUp","getBoundingClientRect","left","top","position","transform","moveAt","startDrag","parseInt","window","pageYOffset","removeEventListener","finishDrag","newX","newY","newBottom","offsetHeight","documentElement","clientHeight","docBottom","bottom","scrollY","min","scrollBy","max","clientWidth","offsetWidth","TaskItem","editHandler","dispatch","useDispatch","deleteHandler","checked","onChange","Notifystyled","CloseIcon","NotifyElem","removeNotify","containerDiv","NotifyCmp","Date","getTime","createNotify","notificationsWrapper","wrapper","prepend","notifyElem","Notifyelem","lifeTime","unmountComponentAtNode","Form","form","Input","insets","input","ListTasks","useSelector","inputText","setText","labelSave","setLabelSave","currentTask","setCurrentTask","inputRef","ulRef","focus","ul","scrollTo","scrollHeight","behavior","Notify","filterTasks","useMemo","submitHandler","newTask","editTasks","selectionStart","value","length","selectionEnd","onSubmit","autoFocus","target","cancelHandler","map","key","Foot","footer","Layout","createGlobalStyle","App","GlobalStyles","StrictMode"],"mappings":"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","file":"static/js/main.194c05b8.chunk.js","sourcesContent":["\r\n/**actions types */\r\n\r\nexport enum ActionTypes {\r\n  // LIST_TASK = '@tasks/LIST_TASKS',\r\n  ADD_TASK = '@tasks/ADD_TASK',\r\n  EDIT_TASK = '@tasks/EDIT_TASK',\r\n  DELETE_TASK = '@tasks/DELETE_TASK',\r\n  TOGGLE_COMPLETED = '@tasks/TOGGLE_COMPLETED',\r\n  \r\n  SET_FILTER = '@task/SET_FILTER',\r\n \r\n}\r\n\r\n/**Data types */\r\n\r\nexport interface Task {\r\n  id: number\r\n  name: string\r\n  completed: boolean\r\n}\r\n\r\nexport interface Notify {\r\n  mesasge: string\r\n  color: string\r\n  lifeTime?: number\r\n\r\n}\r\n\r\n\r\n\r\n/**state types */\r\n\r\n\r\nexport interface StateTypes {\r\n  tasks: Task[]\r\n  filter: string\r\n  notify?: Notify | null\r\n}","import { Reducer } from 'redux'\r\n\r\nimport { ActionTypes, StateTypes, Task } from './types'\r\n\r\nconst initTasks = (): Task[] => {\r\n  const tasks:Task[] = []\r\n  for (let i = 1; i <= 100; i++){\r\n    tasks.push({ id: i, name: 'task ' + i, completed: false })\r\n  }\r\n  return tasks\r\n}\r\n\r\nconst INITIAL_STATE: StateTypes = {\r\n  tasks: initTasks(),\r\n  filter: 'ALL',\r\n  notify: null\r\n}\r\n\r\n\r\nconst reducer: Reducer<StateTypes> = (state = INITIAL_STATE, action): StateTypes => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_TASK:\r\n      if (action.task.name.trim() === '' || state.tasks.some(task => task.name.toUpperCase() === action.task.name.toUpperCase())) return { ...state, notify: { color: 'negative', mesasge: 'La tarea Ya existe' } }\r\n      return { ...state, tasks: state.tasks.concat(action.task), notify: { color: 'positive', mesasge: 'Tarea crada con exito' } }\r\n    case ActionTypes.EDIT_TASK:\r\n      const index = state.tasks.findIndex(({ id }) => id === action.task.id)\r\n      if (action.task.name.trim() === '' || index === -1 || state.tasks.some(task => task.name === action.task.name && task.id !== action.task.id))\r\n        return { ...state, notify: { color: 'negative', mesasge: 'La tarea ya existe o no puede ser vacia' } }\r\n      const tasks = [...state.tasks]\r\n      tasks[index] = action.task\r\n      return { ...state, tasks, notify: { color: 'positive', mesasge: 'Tarea editada con exito' } }\r\n    case ActionTypes.DELETE_TASK:\r\n      return { ...state, tasks: state.tasks.filter(task => task.id !== action.id), notify: { color: 'positive', mesasge: 'Tarea eliminada !!!' } }\r\n    case ActionTypes.TOGGLE_COMPLETED:\r\n      const indx = state.tasks.findIndex(({ id }) => id === action.id)\r\n      const t = [...state.tasks]\r\n      t[indx].completed = ! t[indx].completed\r\n      return { ...state, tasks: t }\r\n    case ActionTypes.SET_FILTER:\r\n      return {...state, filter: action.option}\r\n    default://list task por defecto.\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer","import { combineReducers } from 'redux'\r\n\r\nimport tasks from './tasks'\r\n\r\nconst rootReducer = combineReducers({\r\n  tasks\r\n})\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport default rootReducer","import { createStore, Store } from 'redux'\r\n\r\nimport rootReducer, { AppState } from './ducks/rootReducer'\r\n\r\nconst store: Store<AppState> = createStore(rootReducer)\r\n\r\nexport default store","import styled from 'styled-components'\r\n\r\n// HE - Header\r\n// LT - List Tasks\r\n// FO - Footer\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  \r\n  grid-template-columns:240px auto 240px;\r\n  grid-template-rows:55px  auto 75px;\r\n  \r\n  grid-template-areas:\r\n  'HE HE HE'\r\n  'LT LT LT'\r\n  'FO FO FO';\r\n\r\n  height: 100vh;\r\n\r\n  @media (max-width: 320px){\r\n    grid-template-areas:\r\n    'HE'\r\n    'LT'\r\n    'FO';\r\n\r\n    zoom: 10 !important;\r\n    user-zoom: 10;\r\n  }\r\n`;\r\n\r\nexport default Grid","import styled from 'styled-components'\r\n\r\nexport const Head = styled.header`\r\n  grid-area: HE;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background-color: var(--secondary);\r\n\r\n  height:55px;\r\n\r\n  > h2 {\r\n    color: var(--white);\r\n  }\r\n`","import React from 'react'\r\nimport { Head } from './styles'\r\n\r\ninterface OwnProps {\r\n  title: string\r\n}\r\n\r\nconst Header: React.FC<OwnProps> = ({title}) => {\r\n  return (\r\n    <Head>\r\n      <h2>{title}</h2>\r\n    </Head>\r\n  )\r\n}\r\n\r\nexport default Header","import { ActionTypes, Task } from './types'\r\n\r\n\r\n// export const listTasks = () => ({ type: TasksActionTypes.LIST_TASK })\r\nexport const addTasks = (task: Task) => ({ type: ActionTypes.ADD_TASK, task })\r\nexport const editTasks = (task: Task) => ({ type: ActionTypes.EDIT_TASK, task })\r\nexport const deleteTasks = (id: number) => ({ type: ActionTypes.DELETE_TASK, id })\r\nexport const toggleCompleted = (id: number) => ({ type: ActionTypes.TOGGLE_COMPLETED, id })\r\n\r\n\r\nexport const setFilter = (option: string) => ({ type: ActionTypes.SET_FILTER, option })\r\n\r\n","import styled from 'styled-components'\r\n\r\nimport { Edit, DeleteForever } from '@styled-icons/material'\r\n\r\nimport { Props } from '.'\r\n\r\nexport const TaskLi = styled.li<Props>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  min-width: 400px;\r\n\r\n  padding: 8px 20px;\r\n  margin: 0 2px 8px 0;\r\n\r\n  background-color: var(--quaternary);\r\n\r\n  border-radius: 4px;\r\n \r\n &:last-child {\r\n  margin: 0 2px 0 0;\r\n }\r\n\r\n > div:first-child   {\r\n   padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  cursor: pointer;\r\n\r\n  > span {\r\n    -webkit-user-select: none;\r\n    margin-left: 4px;\r\n\r\n    color: var(--white);\r\n\r\n    width: 300px;\r\n\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    font-size: 1rem;\r\n    opacity: .9;\r\n    text-decoration: ${(props) => props.task.completed ? 'line-through' : 'normal'};\r\n    font-style: ${(props) => props.task.completed ? 'italic' : 'normal'};\r\n  }\r\n\r\n  > input {\r\n    cursor: pointer;\r\n  }\r\n\r\n \r\n }`;\r\n\r\n\r\nexport const Button = styled.button`\r\n  padding: 5px;\r\n\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  background-color: var(--focus);\r\n\r\n  border: 1px solid transparent;\r\n\r\n  transition: all .3s ease-in-out;\r\n\r\n\r\n  &:last-child{\r\n    margin-left: 4px;\r\n    background-color: var(--negative);\r\n\r\n  }\r\n\r\n  &:last-child:hover{\r\n    border: 1px solid var(--negative);\r\n    box-shadow: 0 0 5px var(--negative);\r\n\r\n  }\r\n\r\n  &:hover {\r\n    border: 1px solid var(--focus);\r\n    box-shadow: 0 0 5px var(--focus);\r\n  }\r\n  \r\n `;\r\n\r\nexport const IconDelete = styled(DeleteForever)`\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n\r\nexport const IconEdit = styled(Edit)`\r\n  width: 20px;\r\n  height: 20px;\r\n`;","import styled from 'styled-components'\r\n\r\nimport { Cancel, Check, HighlightOff } from '@styled-icons/material'\r\n\r\nexport const Container = styled.div`\r\n\t/* position: absolute;\r\n\ttop: 30%;\r\n\tleft: 50%;\r\n\r\n\ttransform: translate(-50%, -50%); */\r\n\tz-index: 10;\r\n\r\n\tmin-width: 400px;\r\n\r\n\tbackground-color: var(--primary);\r\n\tcolor: var(--white);\r\n\r\n\tborder-radius: 4px;\r\n\r\n\topacity: 0;\r\n\r\n\ttransition: all 0.3s ease-in-out;\r\n\r\n\t&.show {\r\n\t\topacity: 1;\r\n\t}\r\n\t&.hide {\r\n\t\topacity: 0;\r\n\t}\r\n`\r\nexport const Header = styled.div`\r\n\tbackground-color: var(--secondary);\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\r\n\tpadding: 10px 20px;\r\n\r\n\tuser-select: none;\r\n\tcursor: move;\r\n`\r\n\r\nexport const Body = styled.div`\r\n\tpadding: 20px 20px;\r\n\tmargin-left: 5px;\r\n`\r\n\r\nexport const Footer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: flex-end;\r\n\r\n\tpadding: 10px 20px;\r\n\t> button {\r\n\t\tpadding: 5px 10px;\r\n\t\tborder-radius: 4px;\r\n\r\n\t\tcursor: pointer;\r\n\t}\r\n\t> button:last-child {\r\n\t\tmargin-left: 8px;\r\n\t\tbackground-color: var(--negative);\r\n\t}\r\n\r\n\t> button:first-child {\r\n\t\tbackground-color: var(--focus);\r\n\t}\r\n\r\n\t> button > svg {\r\n\t\tmargin-right: 4px;\r\n\t}\r\n`\r\n\r\nexport const IconClose = styled(HighlightOff)`\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n`\r\nexport const IconCancel = styled(Cancel)`\r\n width: 24px;\r\n height: 24px;\r\n`\r\nexport const IconOk = styled(Check)`\r\n width: 24px;\r\n height: 24px;\r\n`\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Cmp from './Cmp'\r\n\r\n\r\nexport enum ETypeAction {\r\n  REMOVE = 'remove',\r\n  CANCEL = 'cancel',\r\n  OK = 'ok'\r\n}\r\n\r\nexport enum EType {\r\n  FORM = 'form',\r\n  CONFIRM = 'confirm',\r\n  ALERT = ''\r\n}\r\n\r\nexport interface IDialog {\r\n  type?: EType,\r\n  title: string,\r\n  content: string,\r\n  draggable?: boolean,\r\n\r\n  onCancel: () => void\r\n  onOk: () => void\r\n}\r\n\r\n// export interface ActionProps {\r\n//   cancel: () => void\r\n//   ok: () => void\r\n// }\r\n\r\nclass Dialog {\r\n  private props: IDialog\r\n\r\n  private id: string\r\n\r\n  constructor(props: IDialog) {\r\n    this.props = props\r\n    this.props.draggable = props.draggable || true\r\n    this.props.type = props.type || EType.CONFIRM\r\n\r\n    this.id = Math.random().toString()\r\n\r\n    this.show()\r\n\r\n  }\r\n\r\n  private show() {\r\n    // const notifyElem = React.createElement(Notifyelem, { notify: this.notify, removeNotify: this.removeNotify, id: this.id })\r\n\r\n    // debe ser los mismos parametros que se reciven en Cmp.tsx\r\n    const component = React.createElement(Cmp, { ...this.props })\r\n\r\n    const div = document.createElement('div')\r\n\r\n    div.style.cssText = `position: absolute;\r\n    top: 30%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);z-index: 10;`\r\n\r\n    div.id = this.id\r\n\r\n    const root = document.getElementById('root')\r\n    if (root) {\r\n\r\n      const backCover = document.createElement('div')\r\n      backCover.style.cssText = `\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      background-color: black;\r\n      opacity: 0.6;\r\n      width: 100vw;\r\n      height: 100vh;\r\n      z-index: 0;`\r\n      backCover.classList.add('back-cover')\r\n\r\n      document.body.appendChild(backCover)\r\n\r\n      root.appendChild(div)\r\n\r\n      if (this.props.draggable) {\r\n        let isDragging = false\r\n\r\n        root.addEventListener('mousedown', (e: MouseEvent) => {\r\n          this.onMouseDown(e, div, isDragging)\r\n        })\r\n      }\r\n\r\n      // div.append.\r\n      ReactDOM.render(component, div)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    // ReactDOM.render(component, document.getElementById('root'))\r\n  }\r\n\r\n\r\n  private onMouseDown(event: MouseEvent, dragElement: HTMLDivElement, isDragging: boolean) {\r\n\r\n    // let dragElement = document.body.closest('.draggable');\r\n    if (!dragElement) return;\r\n\r\n    event.preventDefault();\r\n\r\n    dragElement.ondragstart = function () {\r\n      return false;\r\n    };\r\n\r\n    let shiftX: number, shiftY: number;\r\n\r\n    startDrag(dragElement, event.clientX, event.clientY);\r\n\r\n    function onMouseUp(event: MouseEvent) {\r\n      finishDrag();\r\n    };\r\n\r\n    function onMouseMove(event: MouseEvent) {\r\n      moveAt(event.clientX, event.clientY);\r\n    }\r\n\r\n    // on drag start:\r\n    //   remember the initial shift\r\n    //   move the element position:fixed and a direct child of body\r\n    function startDrag(element: HTMLDivElement, clientX: number, clientY: number) {\r\n      if (isDragging) {\r\n        return;\r\n      }\r\n\r\n      isDragging = true;\r\n\r\n      document.addEventListener('mousemove', onMouseMove);\r\n      element.addEventListener('mouseup', onMouseUp);\r\n\r\n      shiftX = clientX - element.getBoundingClientRect().left;\r\n      shiftY = clientY - element.getBoundingClientRect().top;\r\n      if (element) {\r\n\r\n        element.style.position = 'fixed'\r\n        element.style.transform = 'none'\r\n\r\n      }\r\n\r\n\r\n      moveAt(clientX, clientY);\r\n    };\r\n\r\n    function finishDrag() {\r\n      if (!isDragging) {\r\n        return;\r\n      }\r\n      isDragging = false;\r\n\r\n      dragElement.style.top = parseInt(dragElement.style.top) + window.pageYOffset + 'px';\r\n      dragElement.style.position = 'absolute';\r\n\r\n      document.removeEventListener('mousemove', onMouseMove);\r\n      dragElement.removeEventListener('mouseup', onMouseUp);\r\n    }\r\n\r\n    function moveAt(clientX: number, clientY: number) {\r\n      // new window-relative coordinates\r\n      let newX = clientX - shiftX;\r\n      let newY = clientY - shiftY;\r\n\r\n      let newBottom = newY + dragElement.offsetHeight;\r\n\r\n      if (newBottom > document.documentElement.clientHeight) {\r\n        let docBottom = document.documentElement.getBoundingClientRect().bottom;\r\n\r\n        let scrollY = Math.min(docBottom - newBottom, 10);\r\n\r\n        if (scrollY < 0) scrollY = 0;\r\n\r\n        window.scrollBy(0, scrollY);\r\n\r\n        newY = Math.min(newY, document.documentElement.clientHeight - dragElement.offsetHeight);\r\n      }\r\n\r\n      if (newY < 0) {\r\n        // scroll up\r\n        let scrollY = Math.min(-newY, 10);\r\n        if (scrollY < 0) scrollY = 0;\r\n\r\n        window.scrollBy(0, -scrollY);\r\n        newY = Math.max(newY, 0);\r\n      }\r\n      if (newX < 0) newX = 0;\r\n      if (newX > document.documentElement.clientWidth - dragElement.offsetWidth) {\r\n        newX = document.documentElement.clientWidth - dragElement.offsetWidth;\r\n      }\r\n\r\n      dragElement.style.left = newX + 'px';\r\n      dragElement.style.top = newY + 'px';\r\n    }\r\n\r\n  }\r\n\r\n\r\n  // private remove(id: string) {\r\n  //   console.log('hide', id)\r\n  //   const element = document.getElementById(id)\r\n\r\n  //   if (element) {\r\n  //     element.classList.add('hide')\r\n  //     setTimeout(() => {\r\n  //       ReactDOM.unmountComponentAtNode(element)\r\n  //       element.remove()\r\n  //     }, 300)\r\n  //   }\r\n\r\n  // }\r\n\r\n  // private ok() {\r\n  //   this.props.onOk()\r\n  // }\r\n\r\n  // private cancel() {\r\n  //   this.props.onCancel()\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Dialog","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nimport { EType, IDialog } from '.'\r\n\r\nimport { Container, Footer, Header, Body, IconCancel, IconOk, IconClose } from './style'\r\n\r\n// export interface Props {\r\n// \tdialogProps: IDialog\r\n// }\r\n// export interface ActionProps {\r\n// \thide: (id: string) => void\r\n// \tcancel: () => void\r\n// \tok: () => void\r\n// }\r\n\r\nconst Cmp: React.FC<IDialog> = ({   title, content, type, onOk, onCancel }) => {\r\n\r\n\tconst [ id, setId ] = useState<string>('')\r\n\r\n\tconst containerRef = useRef<HTMLDivElement>(null)\r\n\r\n\tuseEffect(() => {\r\n\r\n\r\n\t\tconst container =  containerRef.current\r\n\t\tif (container) {\r\n\t\t\tconst id = container.parentElement?.id\r\n\r\n\t\t\tif(id) setId(id)\r\n\t\t\tcontainer.classList.add('show')\r\n\t\t\tconst body  = \tcontainer.querySelector('.body')\r\n\t\t\tif(body) body.innerHTML = content\r\n\t\t\t\t\r\n\t\t}\r\n\t}, [content])\r\n\r\n\r\n\tconst remove = ()=> {\r\n    console.log('hide', id)\r\n    const element = document.getElementById(id)\r\n\t\tif (element !== null) {\r\n\t\t\tconst child = element.querySelector('.show')\r\n\t\t\tchild?.classList.remove('.show')\r\n\t\t\tchild?.classList.add('hide')\r\n\t\t\tdocument.querySelectorAll('.back-cover').forEach( el => el.remove())\r\n      setTimeout(() => {\r\n        // ReactDOM.unmountComponentAtNode(element)\r\n        element.remove()\r\n      }, 300)\r\n    }\r\n\r\n  }\r\n\r\n\treturn (\r\n\t\t<Container ref={containerRef}>\r\n\t\t\t<Header>\r\n\t\t\t\t<h3>{title}</h3>\r\n\t\t\t\t<IconClose onClick={() => { onCancel(); remove(); }} />\r\n\t\t\t</Header>\r\n\t\t\t<Body className=\"body\"> {content}</Body>\r\n\t\t\t{type === EType.CONFIRM ? (\r\n\t\t\t\t<Footer>\r\n\t\t\t\t\t<button onClick={() => {onCancel(); remove();} }>\r\n\t\t\t\t\t\t<IconCancel />\r\n\t\t\t\t\t\t<span>Cancel</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={() => { onOk(); remove()}}>\r\n\t\t\t\t\t\t<IconOk />\r\n\t\t\t\t\t\t<span>Ok</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Footer>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default Cmp\r\n","import React from 'react'\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { Task } from '../../store/ducks/tasks/types'\r\nimport { deleteTasks, toggleCompleted } from '../../store/ducks/tasks/actions'\r\n\r\nimport { TaskLi, Button, IconEdit, IconDelete } from './styles'\r\nimport Dialog from '../Dialog'\r\n\r\nexport interface Props {\r\n\ttask: Task\r\n}\r\n\r\ninterface ActionProps {\r\n\teditHandler(task: Task): void\r\n}\r\n\r\ntype AllProps = Props & ActionProps\r\n\r\nconst TaskItem: React.FC<AllProps> = ({ task, editHandler }) => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst deleteHandler = (task: Task) => {\r\n\t\t// if (window.confirm('Seguro elimar la tarea \\n' + task.name + '?')) dispatch(deleteTasks(task.id))\r\n\r\n\t\tnew Dialog({\r\n\t\t\ttitle: 'Test',\r\n\t\t\tcontent: `¿ Seguro elimar la tarea <strong>${task.name}</strong> ?`,\r\n\t\t\tonOk: () => {\r\n\t\t\t\tdispatch(deleteTasks(task.id))\r\n\t\t\t},\r\n\t\t\tonCancel: () => {\r\n\t\t\t\tconsole.log('cancel')\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<TaskLi task={task}>\r\n\t\t\t<div onClick={() => dispatch(toggleCompleted(task.id))}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\tchecked={task.completed}\r\n\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<span>{task.name}</span>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Button onClick={() => editHandler(task)}>\r\n\t\t\t\t\t<IconEdit />\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button onClick={() => deleteHandler(task)}>\r\n\t\t\t\t\t<IconDelete />\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</TaskLi>\r\n\t)\r\n}\r\n\r\nexport default TaskItem\r\n","import styled from 'styled-components'\r\n\r\nimport { HighlightOff } from '@styled-icons/material'\r\n\r\nimport { Props } from './Notifyelem'\r\n\r\nexport const Notifystyled = styled.div<Props>`\r\n \r\n  min-height: 35px;\r\n\r\n  padding: 10px 20px;\r\n\r\n  margin-bottom: 4px;\r\n\r\n  background-color: ${(props) => `var(--${props.notify.color})`};\r\n  color: var(--white);\r\n\r\n  border-radius: 4px;\r\n\r\n  font-weight: 300px;\r\n  font-size: 0.9rem;\r\n\r\n  position: relative;\r\n\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  opacity:0;\r\n\r\n  border: 1px solid ${(props) => `var(--${props.notify.color})`};\r\n  box-shadow: 0 0 5px ${(props) => `var(--${props.notify.color})`};\r\n  \r\n  > span:first-child {\r\n    position: absolute;\r\n    top: 1px;\r\n    right: 1px;\r\n  }\r\n  \r\n > span.content-notify {\r\n  line-height: 35px;\r\n  padding: 5px 0;\r\n }\r\n\r\n &.show{\r\n  opacity: 1;\r\n }\r\n\r\n &.hide{\r\n   opacity: 0;\r\n }\r\n`;\r\n\r\nexport const CloseIcon = styled(HighlightOff)`\r\n  width: 18px;\r\n  height: 18px;\r\n  cursor: pointer;\r\n`;\r\n\r\n","import React, {useRef, useEffect} from 'react'\r\nimport { Notify } from '../../store/ducks/tasks/types'\r\n\r\nimport { Notifystyled, CloseIcon } from './styles'\r\n\r\nexport interface Props {\r\n\tnotify: Notify\r\n\t// removeNotify: (ele: HTMLDivElement | null)=> void\r\n\t// reference: React.RefObject<HTMLDivElement>\r\n}\r\n\r\ninterface OwnProps {\r\n\tremoveNotify(id: string): void\r\n\tid: string\r\n}\r\n\r\ntype AllProps = Props & OwnProps \r\n// reference\r\nconst NotifyElem: React.FC<AllProps> = ({ notify, removeNotify, id }) => {\r\n\tconst containerDiv = useRef<HTMLDivElement>(null)\r\n\r\n\tuseEffect(() => {\r\n\t\t// setTimeout(() => {\r\n\t\t\tcontainerDiv.current?.classList.add('show')\r\n\t\t// }, 300)\r\n\t}, [containerDiv])\r\n\r\n\r\n\tconst handlerRemove = () => {\r\n\t\t// removeNotify(reference.current)\r\n\t\tremoveNotify(id)\r\n\t}\r\n\treturn (\r\n\t\t<Notifystyled notify={notify} ref={containerDiv}>\r\n\t\t\t<span onClick={() => handlerRemove()}>\r\n\t\t\t\t<CloseIcon />\r\n\t\t\t</span>\r\n\t\t\t<span className=\"content-notify\">{notify.mesasge}</span>\r\n\t\t</Notifystyled>\r\n\t)\r\n}\r\n\r\nexport default NotifyElem\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { Notify } from '../../store/ducks/tasks/types'\r\nimport Notifyelem from './Notifyelem'\r\n\r\nclass NotifyCmp {\r\n\tprivate notify: Notify\r\n\t// private wrapperRef = React.createRef<HTMLDivElement>();\r\n\tprivate id: string = new Date().getTime() + ''\r\n\r\n\tconstructor(notify: Notify) {\r\n\t\tthis.notify = notify\r\n\t\tthis.createNotify()\r\n\t}\r\n\r\n\tcreateNotify() {\r\n\r\n\t\tlet notificationsWrapper = document.getElementById('wrapper-notifications')\r\n\r\n\t\tif (!notificationsWrapper) {\r\n\t\t\tnotificationsWrapper = document.createElement('div')\r\n\t\t\tnotificationsWrapper.id = 'wrapper-notifications'\r\n\t\t\tnotificationsWrapper.classList.add('wrapper-notifications')\r\n\t\t\tdocument.body.appendChild(notificationsWrapper)\r\n\t\t}\r\n\r\n\t\tconst wrapper = document.createElement('div')\r\n\t\twrapper.id = this.id\r\n\t\tnotificationsWrapper.prepend(wrapper)\r\n\t\t\r\n\r\n\t\t// const notifyElem = <Notifyelem notify={this.notify} removeNotify={this.removeNotify}/>\r\n\t\t//reference:this.wrapperRef\r\n\t\tconst notifyElem = React.createElement(Notifyelem, { notify: this.notify, removeNotify: this.removeNotify, id: this.id })\r\n\t\tReactDOM.render(notifyElem, wrapper)\r\n\r\n\t\tconst lifeTime = this.notify.lifeTime || 7000\r\n\t\tsetTimeout(() => {\r\n\t\t\r\n\t\t\t// this.removeNotify(this.wrapperRef.current)\r\n\t\t\tthis.removeNotify(this.id)\r\n\t\t}, lifeTime)\r\n\t}\r\n// elem: HTMLDivElement | null\r\n\tremoveNotify(id: string) {\r\n\t\tconst wrapper =  document.getElementById(id)\r\n\t\tif (wrapper) {\r\n\t\t\tconst child = wrapper.querySelector('div')\r\n\t\t\tchild?.classList.remove('show')\r\n\t\t\tchild?.classList.add('hide')\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tReactDOM.unmountComponentAtNode(wrapper)\r\n\t\t\t\twrapper.remove()\r\n\t\t\t}, 300)\r\n\r\n\t\t\t\r\n\t\t\t// elem?.remove()\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default NotifyCmp\r\n","import styled from 'styled-components'\r\n\r\ninterface Props {\r\n  insets?: boolean\r\n}\r\n\r\nexport const Container = styled.div`\r\n  grid-area: LT;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  background-color: var(--tertiary);\r\n\r\n  padding-bottom: 10px;\r\n\r\n\r\n  min-height: calc(100vh - 130px);\r\n\r\n  > ul {\r\n    /* min-height: calc(100vh - 55px - 45px - 75px -20px -10px); */\r\n\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n      width: 4px;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      background-color: var(--focus);\r\n      border-radius: 4px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n      background-color: var(--secondary);\r\n    }\r\n\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  justify-content: start;\r\n  align-items: center;\r\n  \r\n  padding: 10px 0;\r\n\r\n\r\n  > button {\r\n    margin-left: 4px;\r\n  }\r\n`\r\n\r\nexport const Separator = styled.div<Props>`\r\n  height: 1px;\r\n  width: ${(props)=>props.insets? '80%': '100%'};\r\n\r\n  background-color: var(--white);\r\n  \r\n  margin: 15px 0; \r\n  opacity: .1;\r\n\r\n` \r\nexport const Input = styled.input`\r\n  padding:10px;\r\n  border-radius: 4px;\r\n  \r\n  font-size: 1.1rem;\r\n  font-weight: 500;\r\n  color: var(--primary);\r\n  border: 1px solid transparent;\r\n  \r\n  min-width: 328px;\r\n  \r\n\r\n  transition: all 0.3s ease-in-out;\r\n  &:hover, &:focus {\r\n    border: 1px solid var(--focus);\r\n    box-shadow: 0 0 5px var(--focus);\r\n  }\r\n \r\n`\r\n\r\nexport const Button = styled.button`\r\n  padding: 12.5px 10px;\r\n  border-radius: 4px;\r\n\r\n  background-color: var(--focus);\r\n\r\n  font-weight: 500;\r\n\r\n  border: 1px solid transparent;\r\n\r\n  transition: all 0.3s ease-in-out;\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover, &:focus {\r\n    border: 1px solid var(--focus);\r\n    box-shadow: 0 0 5px var(--focus);\r\n  }\r\n`","import React, { useState, useRef, useEffect, useMemo } from 'react'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { AppState } from '../../store/ducks/rootReducer'\r\n\r\nimport { addTasks, editTasks } from '../../store/ducks/tasks/actions'\r\n\r\nimport { Task } from '../../store/ducks/tasks/types'\r\n\r\nimport TaskItem from '../TaskItem'\r\nimport Notify from '../Notify'\r\n\r\n\r\nimport { Container, Form, Input, Button } from './styles'\r\n\r\n\r\nconst ListTasks: React.FC = () => {\r\n\tconst tasks = useSelector((state: AppState) => state.tasks.tasks)\r\n\r\n\tconst notify = useSelector((state: AppState) => state.tasks.notify)\r\n\t\r\n\tconst filter = useSelector((state: AppState) => state.tasks.filter)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst [ inputText, setText ] = useState<string>('')\r\n\r\n\tconst [ labelSave, setLabelSave ] = useState<string>('ADD')\r\n\r\n\tconst [ currentTask, setCurrentTask ] = useState<Task>()\r\n\r\n\tconst inputRef = useRef<HTMLInputElement>(null)\r\n\tconst ulRef = useRef<HTMLUListElement>(null)\r\n\r\n\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (notify) {\r\n\t\t\t\tif (notify.color !== 'negative') {\r\n\t\t\t\t\tsetText('')\r\n\t\t\t\t\tinputRef.current?.focus()\r\n\r\n\t\t\t\t\tif (labelSave === 'SAVE') {\r\n\t\t\t\t\t\tsetLabelSave('ADD')\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t\tconst ul = ulRef.current\r\n\t\t\t\tif (notify.mesasge === 'Tarea crada con exito' && ul) {\r\n\t\t\t\t\tul.scrollTo({ top: ul.scrollHeight, behavior: 'smooth' });\r\n\t\t\t\t}\r\n\t\t\t\tnew Notify(notify)\r\n\t\t\t}\r\n\t\t},\r\n\t\t// eslint-disable-next-line \r\n\t\t[ notify ]\r\n\t)\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('scroll');\r\n\t// \tconst ul = ulRef.current\r\n\t// \tif (ul) {\r\n\t// \t\t// setTimeout(() => {\r\n\t// \t\t// console.log(ul);\r\n\r\n\t// \t\t\tul.scrollTo({top: ul.scrollHeight, behavior: 'smooth'});\r\n\t// \t\t// },1000)\r\n\t// \t}\r\n\t// }, [tasks, ulRef])\r\n\r\n\tconst filterTasks = useMemo(() => {\r\n\t\tswitch (filter) {\r\n\t\t\tcase 'COMPLETED':\r\n\t\t\t\treturn tasks.filter(task=>task.completed)\r\n\t\t\tcase 'UNCOMPLETED':\r\n\t\t\t\treturn tasks.filter(task => !task.completed)\r\n\t\t\tdefault:\r\n\t\t\t\treturn tasks\r\n\t\t}\r\n\t },[filter, tasks])\r\n\r\n\tconst submitHandler = (e: React.FormEvent<HTMLFormElement>) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tif (labelSave === 'ADD') {\r\n\t\t\tconst newTask: Task = {\r\n\t\t\t\tid: new Date().getTime(),\r\n\r\n\t\t\t\tname: inputText,\r\n\r\n\t\t\t\tcompleted: false\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(addTasks(newTask))\r\n\r\n\t\t} else {\r\n\t\t\tif (currentTask) dispatch(editTasks({...currentTask, name: inputText}))\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tconst editHandler = (task: Task) => {\r\n\t\tsetLabelSave('SAVE')\r\n\t\tsetText(task.name)\r\n\t\tsetCurrentTask(task)\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst input = inputRef.current\r\n\t\t\tif (input) {\r\n\t\t\t\tinput.selectionStart = input.value.length\r\n\t\t\t\tinput.selectionEnd = input.value.length\r\n\t\t\t\tinput.focus()\r\n\t\t\t}\r\n\t\t},10)\r\n\r\n\t}\r\n\r\n\tconst cancelHandler = () => {\r\n\t\tsetLabelSave('ADD')\r\n\t\tsetText('')\r\n\t\tinputRef.current?.focus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Form onSubmit={(e) => submitHandler(e)} >\r\n\t\t\t\t<Input autoFocus type='text' value={inputText} onChange={(e) => setText(e.target.value)} ref={inputRef} />\r\n\t\t\t\t<Button type='submit'>{labelSave}</Button>\r\n\t\t\t\t<Button type='button' onClick={() =>  cancelHandler()}>Cancel</Button>\r\n\t\t\t</Form>\r\n\t\t\t{/* <Separator insets /> */}\r\n\t\t\t<ul ref={ulRef}>{filterTasks.map((task) => <TaskItem key={task.id} task={task} editHandler={editHandler} />)}</ul>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default ListTasks\r\n","import styled from 'styled-components'\r\n\r\nexport const Foot = styled.footer`\r\n  grid-area: FO;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  background-color: var(--secondary);\r\n\r\n  height: 75px;\r\n\r\n > span {\r\n   color: var(--white);\r\n   font-weight: 300;\r\n }\r\n`\r\n\r\nexport const Button = styled.button`\r\n  margin-left: 4px;\r\n\r\n  padding: 5px;\r\n\r\n  border-radius: 4px;\r\n\r\n  cursor: pointer;\r\n\r\n  font-weight: 500;\r\n\r\n  border: 1px solid transparent;\r\n\r\n  &.active{\r\n    background-color: var(--focus);\r\n    border: 1px solid  var(--focus);\r\n    box-shadow: 0 0 5px var(--focus);\r\n  }\r\n  &:hover {\r\n    background-color: var(--focus);\r\n    border: 1px solid  var(--focus);\r\n    box-shadow: 0 0 5px var(--focus);\r\n  }\r\n\r\n  &:last-child {\r\n    margin-left: none;\r\n  }\r\n\r\n`;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Foot, Button } from './styles'\r\nimport { setFilter } from '../../store/ducks/tasks/actions'\r\nimport { AppState } from '../../store/ducks/rootReducer'\r\n\r\nconst Footer: React.FC = () => {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst filter = useSelector((state: AppState) => state.tasks.filter)\r\n\treturn (\r\n\t\t<Foot>\r\n\t\t\t<Button onClick={() => dispatch(setFilter('ALL'))} className={filter === 'ALL' ? 'active' : ''}>\r\n\t\t\t\t<span>All</span>\r\n\t\t\t</Button>\r\n\t\t\t<Button onClick={() => dispatch(setFilter('COMPLETED'))} className={filter === 'COMPLETED' ? 'active' : ''}>\r\n\t\t\t\t<span>Completed</span>\r\n\t\t\t</Button>\r\n\t\t\t<Button onClick={() => dispatch(setFilter('UNCOMPLETED'))} className={filter === 'UNCOMPLETED' ? 'active' : ''}>\r\n\t\t\t\t<span>Uncompleted</span>\r\n\t\t\t</Button>\r\n\t\t</Foot>\r\n\t)\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport Grid from './styles'\r\nimport Header from '../Header'\r\nimport ListTasks from '../ListTasks'\r\nimport Footer from '../Footer'\r\n\r\n\r\nconst Layout: React.FC = () => {\r\n\t// useEffect(() => {\r\n\t// \tnew Dialog({ title: 'Test', content: 'Test content 2344', onOk: () => {\r\n\t// \t\tconsole.log('ok');\r\n\t// \t}, onCancel: () => {\r\n\t// \t\tconsole.log('cancel');\r\n\t// \t} })\r\n\t// }, [])\r\n\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Header title='TaskApp' />\r\n\t\t\t<ListTasks />\r\n\t\t\t<Footer />\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nexport default Layout\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html, body, #root {\r\n   height: 100vh; \r\n  }\r\n  *, button, input{\r\n    border: 0;\r\n    outline: 0;\r\n\r\n\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  .wrapper-notifications{\r\n    position: absolute;\r\n    right: 2rem;\r\n    bottom:5rem;\r\n  }\r\n\r\n  :root {\r\n    --primary: #36393f;\r\n    --secondary: #2f3136;\r\n    --tertiary: rgb(32, 34, 37);\r\n    --quaternary: #292b2f;\r\n    --quinary: #393d42\r\n    --senary: #828386;\r\n\r\n    --negative: #f84a4b;\r\n    --positive: #21ba45;\r\n\r\n    --white: #ffffff;\r\n\r\n    --focus: #51cbee;\r\n  }\r\n\r\n  \r\n`;","import React from 'react'\n\nimport { Provider } from 'react-redux'\n\nimport store from './store'\n\nimport Layout from './components/Layout'\nimport GlobalStyles from './styles/GlobalStyles'\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Layout />\n\t\t\t<GlobalStyles />\n\t\t</Provider>\n\t)\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}